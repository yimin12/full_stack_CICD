{"version":3,"sources":["client.js","Notification.js","DrawerForm.js","App.js","reportWebVitals.js","index.js"],"names":["checkStatus","response","ok","error","Error","statusText","Promise","reject","getAllStudents","fetch","then","addNewStudent","student","headers","Content-Type","method","body","JSON","stringify","openNotificationWithIcon","type","message","description","placement","notification","successNotification","errorNotification","Option","Select","antIcon","react_default","a","createElement","LoadingOutlined","style","fontSize","spin","StudentDrawerForm","_ref","showDrawer","setShowDrawer","fetchStudents","onClose","_useState","useState","_useState2","Object","slicedToArray","submitting","setSubmitting","drawer","title","width","visible","bodyStyle","paddingBottom","footer","textAlign","es_button","onClick","marginRight","es_form","layout","onFinishFailed","errorInfo","alert","onFinish","console","log","concat","name","catch","err","json","res","status","finally","hideRequiredMark","row","gutter","col","span","Item","label","rules","required","input","placeholder","es_select","value","htmlType","indicator","Header","Layout","Content","Footer","Sider","SubMenu","Menu","TheAvatar","trim","length","avatar","icon","UserOutlined","split","charAt","removeStudent","studentId","callback","deleteStudent","columns","dataIndex","key","render","text","App_TheAvatar","es_radio","Group","popconfirm","onConfirm","id","okText","cancelText","Button","App","students","setStudents","_useState3","_useState4","collapsed","setCollapsed","_useState5","_useState6","fetching","setFetching","_useState7","_useState8","data","useEffect","minHeight","collapsible","onCollapse","className","menu","theme","defaultSelectedKeys","mode","PieChartOutlined","DesktopOutlined","TeamOutlined","FileOutlined","padding","margin","breadcrumb","Fragment","shape","PlusOutlined","size","DrawerForm","empty","table","dataSource","bordered","tag","badge","count","pagination","pageSize","scroll","y","rowKey","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.83162523.chunk.js","sourcesContent":["import fetch from 'unfetch'\n\nconst checkStatus = response => {\n    if (response.ok) return response;\n    const error = new Error(response.statusText);\n    error.response = response;\n    return Promise.reject(error);\n}\n\nexport const getAllStudents = () =>\n    fetch(\"api/v1/students\")\n        .then(checkStatus)\n\nexport const addNewStudent = student =>\n    fetch(\"api/v1/students\", {\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify(student)\n    }).then(checkStatus)\n\nexport const deleteStudent = studentId =>\n    fetch(`api/v1/students/${studentId}`, {\n        method: 'DELETE'\n    }).then(checkStatus);","import {notification} from 'antd';\n\nconst openNotificationWithIcon = (type, message, description, placement) => {\n    placement = placement || \"topRight\"\n    notification[type]({message, description, placement});\n}\n\nexport const successNotification = (message, description, placement) =>\n    openNotificationWithIcon('success', message, description, placement);\n\nexport const errorNotification = (message, description, placement) =>\n    openNotificationWithIcon('error', message, description, placement);\n\nexport const infoNotification = (message, description, placement) =>\n    openNotificationWithIcon('info', message, description, placement);\n\nexport const warningNotification = (message, description, placement) =>\n    openNotificationWithIcon('warning', message, description, placement);\n","import React from 'react';\nimport {Drawer, Input, Col, Select, Form, Row, Button, Spin} from 'antd';\nimport {addNewStudent} from \"./client\";\nimport {LoadingOutlined} from \"@ant-design/icons\";\nimport {useState} from 'react';\nimport {errorNotification, successNotification} from \"./Notification\";\n\nconst {Option} = Select\nconst antIcon = <LoadingOutlined style={{fontSize: 24}} spin />\n\nfunction StudentDrawerForm({showDrawer, setShowDrawer, fetchStudents}) {\n    const onClose = () => setShowDrawer(false);\n    const [submitting, setSubmitting] = useState(false)\n\n    const onFinish = student => {\n        setSubmitting(true)\n        console.log(JSON.stringify(student, null, 2))\n        addNewStudent(student)\n            .then(() => {\n                console.log(\"student added\")\n                onClose();\n                successNotification(\n                    \"Student successfully added\",\n                    `${student.name} was added to the system`\n                )\n                fetchStudents();\n            }).catch(err => {\n            console.log(err);\n            err.response.json().then(res => {\n                console.log(res);\n                errorNotification(\n                    \"There was an issue\",\n                    `${res.message} [${res.status}] [${res.error}]`,\n                    \"bottomLeft\"\n                )\n            });\n        }).finally(() => {\n            setSubmitting(false);\n        })\n    };\n\n    const onFinishFailed = errorInfo => {\n        alert(JSON.stringify(errorInfo, null, 2));\n    }\n\n    return <Drawer\n        title=\"Create new student\"\n        width={720}\n        onClose={onClose}\n        visible={showDrawer}\n        bodyStyle={{paddingBottom: 80}}\n        footer={\n            <div\n                style={{\n                    textAlign: 'right',\n                }}\n            >\n                <Button onClick={onClose} style={{marginRight: 8}}>\n                    Cancel\n                </Button>\n            </div>\n        }\n    >\n        <Form layout=\"vertical\"\n              onFinishFailed={onFinishFailed}\n              onFinish={onFinish}\n              hideRequiredMark>\n            <Row gutter={16}>\n                <Col span={12}>\n                    <Form.Item\n                        name=\"name\"\n                        label=\"Name\"\n                        rules={[{required: true, message: 'Please enter student name'}]}\n                    >\n                        <Input placeholder=\"Please enter student name\"/>\n                    </Form.Item>\n                </Col>\n                <Col span={12}>\n                    <Form.Item\n                        name=\"email\"\n                        label=\"Email\"\n                        rules={[{required: true, message: 'Please enter student email'}]}\n                    >\n                        <Input placeholder=\"Please enter student email\"/>\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Row gutter={16}>\n                <Col span={12}>\n                    <Form.Item\n                        name=\"gender\"\n                        label=\"gender\"\n                        rules={[{required: true, message: 'Please select a gender'}]}\n                    >\n                        <Select placeholder=\"Please select a gender\">\n                            <Option value=\"MALE\">MALE</Option>\n                            <Option value=\"FEMALE\">FEMALE</Option>\n                            <Option value=\"OTHER\">OTHER</Option>\n                        </Select>\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Row>\n                <Col span={12}>\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Submit\n                        </Button>\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Row>\n                {submitting && <Spin indicator={antIcon} />}\n            </Row>\n        </Form>\n    </Drawer>\n}\n\nexport default StudentDrawerForm;\n","import React from 'react';\nimport {useState, useEffect} from 'react'\nimport {deleteStudent, getAllStudents} from \"./client\";\nimport {\n    Layout,\n    Menu,\n    Breadcrumb,\n    Table,\n    Spin,\n    Empty,\n    Button,\n    Badge,\n    Tag,\n    Avatar,\n    Radio, Popconfirm\n} from 'antd';\n\nimport {\n    DesktopOutlined,\n    PieChartOutlined,\n    FileOutlined,\n    TeamOutlined,\n    UserOutlined,\n    LoadingOutlined,\n    PlusOutlined\n} from '@ant-design/icons';\nimport StudentDrawerForm from \"./DrawerForm\";\n\nimport './App.css';\nimport {successNotification, errorNotification} from \"./Notification\";\n\n\nconst {Header, Content, Footer, Sider} = Layout;\nconst {SubMenu} = Menu;\n\nconst TheAvatar = ({name}) => {\n    let trim = name.trim();\n    if (trim.length === 0) {\n        return <Avatar icon={<UserOutlined/>}/>\n    }\n    const split = trim.split(\" \");\n    if (split.length === 1) {\n        return <Avatar>{name.charAt(0)}</Avatar>\n    }\n    return <Avatar>\n        {`${name.charAt(0)}${name.charAt(name.length - 1)}`}\n    </Avatar>\n}\n\nconst removeStudent = (studentId, callback) => {\n    deleteStudent(studentId).then(() => {\n        successNotification( \"Student deleted\", `Student with id: ${studentId} was deleted`);\n        callback();\n    }).catch(err => {\n        err.response.json().then(res => {\n            console.log(res);\n            errorNotification(\n                \"There was an issue\",\n                `${res.message} [${res.status}] [${res.error}]`\n            )\n        });\n    })\n}\n\nconst columns = fetchStudents => [\n    {\n        title: '',\n        dataIndex: 'avatar',\n        key: 'avatar',\n        render: (text, student) =>\n            <TheAvatar name={student.name}/>\n    },\n    {\n        title: 'Id',\n        dataIndex: 'id',\n        key: 'id',\n    },\n    {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name',\n    },\n    {\n        title: 'Email',\n        dataIndex: 'email',\n        key: 'email',\n    },\n    {\n        title: 'Gender',\n        dataIndex: 'gender',\n        key: 'gender',\n    },\n    {\n        title: 'Actions',\n        key: 'actions',\n        render: (text, student) =>\n            <Radio.Group>\n                <Popconfirm\n                    placement='topRight'\n                    title={`Are you sure to delete ${student.name}`}\n                    onConfirm={() => removeStudent(student.id, fetchStudents)}\n                    okText='Yes'\n                    cancelText='No'>\n                    <Radio.Button value=\"small\">Delete</Radio.Button>\n                </Popconfirm>\n                <Radio.Button value=\"small\">Edit</Radio.Button>\n            </Radio.Group>\n    }\n];\n\nconst antIcon = <LoadingOutlined style={{fontSize: 24}} spin/>;\n\nfunction App() {\n    const [students, setStudents] = useState([]);\n    const [collapsed, setCollapsed] = useState(false);\n    const [fetching, setFetching] = useState(true);\n    const [showDrawer, setShowDrawer] = useState(false);\n\n    const fetchStudents = () =>\n        getAllStudents()\n            .then(res => res.json())\n            .then(data => {\n                console.log(data);\n                setStudents(data);\n            }).catch(err => {\n                console.log(err.response)\n                err.response.json().then(res => {\n                    console.log(res);\n                    errorNotification(\n                        \"There was an issue\",\n                        `${res.message} [statusCode: ${res.status}] [${res.error}]`\n                    )\n                });\n            }).finally(() => setFetching(false))\n\n    useEffect(() => {\n        console.log(\"component is mounted\");\n        fetchStudents();\n    }, []);\n\n    const renderStudents = () => {\n        if (fetching) {\n            return <Spin indicator={antIcon}/>\n        }\n        if (students.length <= 0) {\n            return <>\n                <Button\n                    onClick={() => setShowDrawer(!showDrawer)}\n                    type=\"primary\" shape=\"round\" icon={<PlusOutlined/>} size=\"small\">\n                    Add New Student\n                </Button>\n                <StudentDrawerForm\n                    showDrawer={showDrawer}\n                    setShowDrawer={setShowDrawer}\n                    fetchStudents={fetchStudents}\n                />\n                <Empty/>\n            </>;\n        }\n        return <>\n            <StudentDrawerForm\n                showDrawer={showDrawer}\n                setShowDrawer={setShowDrawer}\n                fetchStudents={fetchStudents}\n            />\n            <Table\n                dataSource={students}\n                columns={columns(fetchStudents)}\n                bordered\n                title={() =>\n                    <>\n                        <Tag>Number of students</Tag>\n                        <Badge count={students.length} className=\"site-badge-count-4\"/>\n                        <br/><br/>\n                        <Button\n                            onClick={() => setShowDrawer(!showDrawer)}\n                            type=\"primary\" shape=\"round\" icon={<PlusOutlined/>} size=\"small\">\n                            Add New Student\n                        </Button>\n                    </>\n                }\n                pagination={{pageSize: 50}}\n                scroll={{y: 500}}\n                rowKey={student => student.id}\n            />\n        </>\n    }\n\n    return <Layout style={{minHeight: '100vh'}}>\n        <Sider collapsible collapsed={collapsed}\n               onCollapse={setCollapsed}>\n            <div className=\"logo\"/>\n            <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\n                <Menu.Item key=\"1\" icon={<PieChartOutlined/>}>\n                    Option 1\n                </Menu.Item>\n                <Menu.Item key=\"2\" icon={<DesktopOutlined/>}>\n                    Option 2\n                </Menu.Item>\n                <SubMenu key=\"sub1\" icon={<UserOutlined/>} title=\"User\">\n                    <Menu.Item key=\"3\">Tom</Menu.Item>\n                    <Menu.Item key=\"4\">Bill</Menu.Item>\n                    <Menu.Item key=\"5\">Alex</Menu.Item>\n                </SubMenu>\n                <SubMenu key=\"sub2\" icon={<TeamOutlined/>} title=\"Team\">\n                    <Menu.Item key=\"6\">Team 1</Menu.Item>\n                    <Menu.Item key=\"8\">Team 2</Menu.Item>\n                </SubMenu>\n                <Menu.Item key=\"9\" icon={<FileOutlined/>}>\n                    Files\n                </Menu.Item>\n            </Menu>\n        </Sider>\n        <Layout className=\"site-layout\">\n            <Header className=\"site-layout-background\" style={{padding: 0}}/>\n            <Content style={{margin: '0 16px'}}>\n                <Breadcrumb style={{margin: '16px 0'}}>\n                    <Breadcrumb.Item>User</Breadcrumb.Item>\n                    <Breadcrumb.Item>Bill</Breadcrumb.Item>\n                </Breadcrumb>\n                <div className=\"site-layout-background\" style={{padding: 24, minHeight: 360}}>\n                    {renderStudents()}\n                </div>\n            </Content>\n            <Footer style={{textAlign: 'center'}}>By Yimin Huang</Footer>\n        </Layout>\n    </Layout>\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}